{
  "$schema": "https://json-schema.org/schema#",
  "id": "Service Schema",
  "title": "Service Schema Specification",
  "type": "object",
  "definitions": {
    "KafkaConnection": {
      "type": "object",
      "description": "Kafka Connection",
      "additionalProperties": false,
      "required": [
        "name",
        "data_direction"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "kafka service name"
        },
        "desc": {
          "type": "string",
          "description": "short description (1-2 sentences) in Markdown format."
        },
        "data_direction": {
          "enum": [
            "rx",
            "tx"
          ]
        },
        "offset_storage": {
          "type": "string",
          "description": "Offset Storage"
        },
        "topics": {
          "description": "A List of topics",
          "type": "object"
        }
      }
    },
    "GrpcConnection": {
      "type": "object",
      "description": "GRPC Connection",
      "additionalProperties": false,
      "properties": {
        "name": {
          "type": "string",
          "description": "GRPC service name"
        },
        "desc": {
          "type": "string",
          "description": "short description (1-2 sentences) in Markdown format."
        },
        "protocol": {
          "enum": [
            "grpc"
          ]
        },
        "data_direction": {
          "enum": [
            "rx",
            "tx",
            "rx_tx"
          ]
        }
      },
      "required": [
        "name",
        "protocol",
        "data_direction"
      ]
    },
    "DbConnection": {
      "type": "object",
      "description": "Other Connection",
      "additionalProperties": false,
      "required": [
        "name",
        "data_direction"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "service name"
        },
        "desc": {
          "type": "string",
          "description": "short description (1-2 sentences) in Markdown format."
        },
        "transport": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "data_direction": {
          "enum": [
            "rx",
            "tx",
            "rx_tx"
          ]
        },
        "databases": {
          "type": "object"
        }
      }
    },
    "CeleryConnection": {
      "type": "object",
      "description": "Celery Connection",
      "additionalProperties": false,
      "required": [
        "name",
        "data_direction"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "kafka service name"
        },
        "desc": {
          "type": "string",
          "description": "short description (1-2 sentences) in Markdown format."
        },
        "transport": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "data_direction": {
          "enum": [
            "rx",
            "tx"
          ]
        },
        "tasks": {
          "description": "A List of tasks",
          "type": "array"
        }
      }
    },
    "Connection": {
      "type": "object",
      "description": "Other Connection",
      "additionalProperties": false,
      "required": [
        "name",
        "data_direction"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "service name"
        },
        "desc": {
          "type": "string",
          "description": "short description (1-2 sentences) in Markdown format."
        },
        "transport": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "data_direction": {
          "enum": [
            "rx",
            "tx",
            "rx_tx"
          ]
        }
      }
    }
  },
  "required": [
    "src",
    "desc",
    "state",
    "type",
    "module"
  ],
  "properties": {
    "src": {
      "type": "string",
      "description": "Url gitlab link to the base dir of service source-code"
    },
    "desc": {
      "type": "string",
      "description": "short description (1-2 sentences) in Markdown format."
    },
    "status": {
      "description": "Service Status. Available values are defined in services.yaml#definitions#status section.",
      "enum": [
        "ready",
        "develop",
        "draft",
        "decommission",
        "deprecated"
      ]
    },
    "language": {
      "description": "Basic Programming Language",
      "enum": [
        "golang",
        "cplus",
        "python",
        "typescript"
      ]
    },
    "state": {
      "description": "State storage. Available values are 'stateless','stateful', 'stateful(rocksdb)', etc. ",
      "enum": [
        "stateless",
        "stateful"
      ]
    },
    "type": {
      "description": "Application Type. Available values are 'db','kafka', 'react_app', etc. ",
      "enum": [
        "db",
        "kafka",
        "elasticsearch",
        "grpc_api",
        "otlp_agent",
        "jaeger",
        "s3"
      ]
    },
    "module": {
      "description": "Service Module.",
      "type": "string"
    },
    "owner": {
      "description": "A List of owners in confluence format: <first_name1>_<second_name1> <first_name2>_<second_name12> ...",
      "type": "string"
    },
    "dev_team": {
      "description": "Development team. Available values are defined in services.yaml#definitions#teams section.",
      "type": "array",
      "items": {
          "type": "object",
          "description": "Internal Storage",
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "Team`s name"
            },
            "lead": {
              "type": "string",
              "description": "Team Lead Member"
            }
          },
          "additionalProperties": false
      }
    },
    "nodes": {
      "description": "Additional Service names of the service in k8s.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "internal_storage": {
      "type": "array",
      "items": {
        "type": "object",
        "description": "Internal Storage",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Internal storage name"
          },
          "desc": {
            "type": "string",
            "description": "Description, Markdown format."
          }
        },
        "additionalProperties": false
      }
    },
    "interfaces": {
      "type": "object"
    },
    "databases": {
      "type": "object"
    },
    "topics": {
      "type": "object"
    },
    "connect_to": {
      "type": "array",
      "uniqueItems": true,
      "minItems": 1,
      "additionalItems": false,
      "items": {
        "type": [
          {
            "$ref": "#/definitions/KafkaConnection"
          },
          {
            "$ref": "#/definitions/GrpcConnection"
          },
          {
            "$ref": "#/definitions/DbConnection"
          },
          {
            "$ref": "#/definitions/CeleryConnection"
          },
          {
            "$ref": "#/definitions/Connection"
          }

        ]
      }
    }
  },
  "additionalProperties": false
}